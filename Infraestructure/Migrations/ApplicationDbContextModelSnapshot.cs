// <auto-generated />
using System;
using Infraestructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.CategoriaIncidencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoriasIncidencias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Titulo = "Camiones"
                        },
                        new
                        {
                            Id = 2,
                            Titulo = "Operadores"
                        },
                        new
                        {
                            Id = 3,
                            Titulo = "Mantenimiento"
                        },
                        new
                        {
                            Id = 4,
                            Titulo = "Diesel"
                        },
                        new
                        {
                            Id = 5,
                            Titulo = "Carga/descarga"
                        },
                        new
                        {
                            Id = 6,
                            Titulo = "Tiempos de entrega"
                        },
                        new
                        {
                            Id = 7,
                            Titulo = "Ruta / Accidente"
                        },
                        new
                        {
                            Id = 8,
                            Titulo = "Sistemas"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Incidencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaIncidenciaId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("TipoIncidenciaId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoIncidenciaId1")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaIncidenciaId");

                    b.HasIndex("TipoIncidenciaId");

                    b.HasIndex("TipoIncidenciaId1");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Incidencias");
                });

            modelBuilder.Entity("Domain.Entities.TipoIncidencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaIncidenciaId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaIncidenciaId");

                    b.ToTable("TiposIncidencias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriaIncidenciaId = 1,
                            Titulo = "Fallo mecánico"
                        },
                        new
                        {
                            Id = 2,
                            CategoriaIncidenciaId = 5,
                            Titulo = "Retraso en carga"
                        },
                        new
                        {
                            Id = 3,
                            CategoriaIncidenciaId = 5,
                            Titulo = "Retraso en descarga"
                        },
                        new
                        {
                            Id = 4,
                            CategoriaIncidenciaId = 8,
                            Titulo = "Problema con GPS/Tablet"
                        },
                        new
                        {
                            Id = 5,
                            CategoriaIncidenciaId = 7,
                            Titulo = "Incidente en ruta (choque, etc.)"
                        },
                        new
                        {
                            Id = 6,
                            CategoriaIncidenciaId = 4,
                            Titulo = "Falta de diesel"
                        },
                        new
                        {
                            Id = 7,
                            CategoriaIncidenciaId = 1,
                            Titulo = "Daño en unidad"
                        },
                        new
                        {
                            Id = 8,
                            CategoriaIncidenciaId = 3,
                            Titulo = "Error en documentos"
                        },
                        new
                        {
                            Id = 9,
                            CategoriaIncidenciaId = 2,
                            Titulo = "Operador no disponible"
                        },
                        new
                        {
                            Id = 10,
                            CategoriaIncidenciaId = 3,
                            Titulo = "Otro"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("ApellidoM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApellidoP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContrasenaHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Domain.Entities.Incidencia", b =>
                {
                    b.HasOne("Domain.Entities.CategoriaIncidencia", "CategoriaIncidencia")
                        .WithMany()
                        .HasForeignKey("CategoriaIncidenciaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.TipoIncidencia", "TipoIncidencia")
                        .WithMany()
                        .HasForeignKey("TipoIncidenciaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.TipoIncidencia", null)
                        .WithMany("Incidencias")
                        .HasForeignKey("TipoIncidenciaId1");

                    b.HasOne("Domain.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CategoriaIncidencia");

                    b.Navigation("TipoIncidencia");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Domain.Entities.TipoIncidencia", b =>
                {
                    b.HasOne("Domain.Entities.CategoriaIncidencia", "CategoriaIncidencia")
                        .WithMany("Tipos")
                        .HasForeignKey("CategoriaIncidenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoriaIncidencia");
                });

            modelBuilder.Entity("Domain.Entities.CategoriaIncidencia", b =>
                {
                    b.Navigation("Tipos");
                });

            modelBuilder.Entity("Domain.Entities.TipoIncidencia", b =>
                {
                    b.Navigation("Incidencias");
                });
#pragma warning restore 612, 618
        }
    }
}
